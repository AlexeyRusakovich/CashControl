// <auto-generated />
using System;
using CashControl.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CashControl.Migrations
{
    [DbContext(typeof(CashControlContext))]
    partial class CashControlContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CashControl.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("Category");

                    b.HasData(
                        new { Id = 1, Name = "Продукты" },
                        new { Id = 2, Name = "Автомобиль" },
                        new { Id = 3, Name = "Транспорт" },
                        new { Id = 4, Name = "Развлечения" },
                        new { Id = 5, Name = "Забота о себе" },
                        new { Id = 6, Name = "Отпуск" },
                        new { Id = 7, Name = "Товары для дома" },
                        new { Id = 8, Name = "Образование" },
                        new { Id = 9, Name = "Разное" },
                        new { Id = 10, Name = "Перевод" },
                        new { Id = 111, Name = "Бизнес" }
                    );
                });

            modelBuilder.Entity("CashControl.Models.Currency", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Abbreviation")
                        .IsRequired()
                        .HasMaxLength(10);

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("Currency");

                    b.HasData(
                        new { Id = 1, Abbreviation = "BYN", FullName = "Belarusian ruble" },
                        new { Id = 2, Abbreviation = "USD", FullName = "United States dollar" },
                        new { Id = 3, Abbreviation = "EUR", FullName = "European euro" },
                        new { Id = 4, Abbreviation = "UAH", FullName = "Ukrainian hryvnia" },
                        new { Id = 5, Abbreviation = "RUB", FullName = "Russian ruble" }
                    );
                });

            modelBuilder.Entity("CashControl.Models.Transactions", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Amount")
                        .HasColumnType("money");

                    b.Property<string>("Categories")
                        .IsRequired()
                        .HasMaxLength(1000);

                    b.Property<int>("CurrencyId");

                    b.Property<DateTime>("Date")
                        .HasColumnType("date");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(300);

                    b.Property<int>("TransactionTypeId");

                    b.Property<string>("UserLogin")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("CurrencyId");

                    b.HasIndex("TransactionTypeId");

                    b.HasIndex("UserLogin");

                    b.ToTable("Transactions");
                });

            modelBuilder.Entity("CashControl.Models.TransactionType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.HasKey("Id");

                    b.ToTable("TransactionType");

                    b.HasData(
                        new { Id = 1, Name = "Income" },
                        new { Id = 2, Name = "Outcome" }
                    );
                });

            modelBuilder.Entity("CashControl.Models.Users", b =>
                {
                    b.Property<string>("Login")
                        .HasMaxLength(50);

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(256);

                    b.HasKey("Login");

                    b.ToTable("Users");

                    b.HasData(
                        new { Login = "admin", Password = "lnjJmSSIz8Yi8NN6EmOu3Eh3yeaf9Va5OmIGTWsJ+R8=" }
                    );
                });

            modelBuilder.Entity("CashControl.Models.Transactions", b =>
                {
                    b.HasOne("CashControl.Models.Currency", "Currency")
                        .WithMany("Transactions")
                        .HasForeignKey("CurrencyId")
                        .HasConstraintName("FK_Transactions_Currency");

                    b.HasOne("CashControl.Models.TransactionType", "TransactionType")
                        .WithMany("Transactions")
                        .HasForeignKey("TransactionTypeId")
                        .HasConstraintName("FK_Transactions_TransactionType");

                    b.HasOne("CashControl.Models.Users", "UserLoginNavigation")
                        .WithMany("Transactions")
                        .HasForeignKey("UserLogin")
                        .HasConstraintName("FK_Transactions_Users");
                });
#pragma warning restore 612, 618
        }
    }
}
